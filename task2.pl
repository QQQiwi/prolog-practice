/* Пример 1 */

отдыхает("Саша", "Анталия").
отдыхает("Анна", "Сочи").
отдыхает("Миша", "Юрмала").
отдыхает("Коля", "Рим").
италия("Рим").
россия("Сочи").
прибалтика("Юрмала").

отдыхРоссия(Кто):-отдыхает(Кто, Где), россия(Где).

/*
?- trace, отдыхРоссия(Кто), write(Кто).
*/

/* Пример 2 */

учится("Коля", 7).
учится("Миша", 9).
учится("Толя", 7).
учится("Ваня", 7).
учится("Маша", 9).
учится("Таня", 7).

ученикиКласса(Класс):- учится(Ученик, Класс), write(Ученик), nl, fail.

/* Пример 3 */

оценка(Балл, "Неверный ввод данных!"):- Балл < 0, !.
оценка(Балл, "Неверный ввод данных!"):- Балл > 100, !.
оценка(Балл, "5"):- Балл >= 80, !.
оценка(Балл, "4"):- Балл >= 60, !.
оценка(Балл, "3"):- Балл >= 40, !.
оценка(Балл, "2"):- Балл < 40.

/* 1 */

/*
увлекается("Миша", гитара).
увлекается("Маша", арфа).
увлекается("Рома", футбол).
увлекается("Таня", лыжи).
*/
спорт(футбол).
спорт(лыжи).
музыкальныйИнструмент(арфа).
музыкальныйИинструмент(гитара).

/*
составить правило спортсмен и определить, кто увлекается спортом;
проследить за поиском решения с помощью отладчика;
построить целевое дерево поиска с возвратом. 
*/

музыкант(Кто):- увлекается(Кто, Чем), музыкальныйИинструмент(Чем).

/*
?- trace, музыкант(Кто), write(Кто).

?- writeln("Кто увлекается музыкой:").
?- forall(музыкант(Кто), (write(" "), writeln(Кто))).
?- writeln("").
*/

/* 2 */

мужчина("Миша").
мужчина("Коля").
женщина("Саша").
женщина("Анна").

?- write("Задание 2: ").
?- writeln("").
?- write("Список женщин, отдыхающих в России: ").
списокЖенщин(Список):- setof(Кто, (женщина(Кто), отдыхРоссия(Кто)), Список).
?- списокЖенщин(Список), writeln(Список).

отдыхИталия(Кто):-отдыхает(Кто, Где), италия(Где).

?- write("Список мужчин, отдыхающих в Италии: ").
списокМужчин(Список):- setof(Кто, (мужчина(Кто), отдыхИталия(Кто)), Список).
?- списокМужчин(Список), writeln(Список).

/* 3 */

/* книга(автор, название, издательство, годИздания). */
книга("Пушкин", "Руслан и Людмила", "Издательство 1", 1995).
книга("Пушкин", "Евгений Онегин", "Издательство 2", 2006).
книга("Гоголь", "Мертвые души", "Эксмо", 2011).
книга("Гоголь", "Шинель", "Издательство 1", 2011).
книга("Лермонтов", "Мцыри", "Эксмо", 2010).
книга("Замятин", "Мы", "Эксмо", 2009).

?- writeln("Весь список книг: ").
?- forall(книга(_, Название, _, _), (write(" "), writeln(Название))).

?- writeln("").
?- writeln("список книг авторов Пушкина и Гоголя: ").
?- forall((книга("Пушкин", Название, _, _); книга("Гоголь", Название, _, _)), (write(" "), writeln(Название))).

?- writeln("").
?- writeln("список книг, изданных в издательстве «Эксмо» не ранее 2010 года: ").
?- forall((книга(_, Название, "Эксмо", Год), Год >= 2010), (write(" "), writeln(Название))).

/* 4 */

/* Составить программу, реализующую расписание полетов. */
/* В справочнике содержится следующая информация о каждом рейсе: номер рейса, пункт назначения, время вылета, дни(ежедн., чет, нечет) */

/* рейс(номерРейса, пунктНазначения, времяВылета, дни). */

рейс(1, "Москва", 14, "ежедн").
рейс(2, "Саратов", 15, "чет").
рейс(3, "Санкт-Петербург", 16, "ежедн").
рейс(4, "Владивосток", 13, "нечет").
рейс(5, "Самара", 11, "чет").
рейс(6, "Минск", 18, "нечет").


/* а) всю информацию из справочника; */
?- writeln("").
?- writeln("Вся информация из справочника: ").
?- forall(рейс(НомерРейса, ПунктНазначения, ВремяВылета, Дни), (write(" "),
                                                                write(НомерРейса),
                                                                write(" "),
                                                                write(ПунктНазначения),
                                                                write(" "),
                                                                write(ВремяВылета),
                                                                write(" "),
                                                                write(Дни),
                                                                writeln(""))).


/* б) информацию о самолетах, вылетающих в заданный пункт по четным дням; */

?- writeln("").
?- writeln("Информация о самолетах, вылетающих в заданный пункт по четным дням: ").
вылетПунктПоЧет(Пункт):- рейс(НомерРейса, Пункт, ВремяВылета, "чет"), write("Номер рейса: "),
                                                                      write(НомерРейса),
                                                                      write(" Время вылета: "),
                                                                      write(ВремяВылета), 
                                                                      writeln(" ").


?- вылетПунктПоЧет("Саратов").

/* в) информацию о самолетах, вылетающих ежедневно не позже указанного времени. */

?- writeln("").
?- writeln("Информация о самолетах, вылетающих ежедневно не позже указанного времени: ").


вылетЕжеднНеПозже(Время):- рейс(НомерРейса, Пункт, ВремяВылета, "ежедн"), ВремяВылета =< Время, write("Номер рейса: "),
                                                                                                write(НомерРейса),
                                                                                                write(" Пункт назначения: "),
                                                                                                write(Пункт), 
                                                                                                writeln(" ").

?- вылетЕжеднНеПозже(15).

/* 7 */

/*
Составить программу, реализующую телефонный справочник. В справочнике содержится следующая информация
о каждом абоненте: имя и телефон. Реализовать вывод всей информации из справочника, поиск телефона по
имени, поиск имени по телефону.
*/

телефон("Стас", "+7 322 281 34 66").
телефон("Вадим", "+7 931 131 54 67").
телефон("Валерий", "+7 960 531 27 51").
телефон("Вениамин", "+7 615 228 91 73").
телефон("Тамара", "+7 786 322 75 75").
телефон("Татьяна", "+7 410 148 51 90").
телефон("Антон", "+7 869 999 38 03").

справочник():- forall(телефон(Имя, Номер), (write("Имя: "), write(Имя), write(" | Номер: "), write(Номер), writeln(""))).
телефонПоИмени(Имя):- телефон(Имя, Номер), writeln(Номер).
имяПоТелефону(Номер):- телефон(Имя, Номер), writeln(Имя).

?- writeln("").
?- writeln("Вся информация из справочника: ").
?- справочник().

?- writeln("").
?- writeln("Поиск телефона по имени: ").
?- телефонПоИмени("Стас").

?- writeln("").
?- writeln("Поиск имени по телефону: ").
?- имяПоТелефону("+7 410 148 51 90").

/* 8 */

/*
База данных содержит факты вида: ученик(имя, класс) и увлекается(имя, хобби). Составить программу, которая выводит:

а) список всех учеников и их увлечения;
*/

ученик("Коля", 7).
ученик("Толя", 7).
ученик("Ваня", 7).
ученик("Таня", 7).
ученик("Миша", 9).
ученик("Маша", 9).
ученик("Стас", 8).
ученик("Рома", 8).

увлекается("Маша", арфа).
увлекается("Рома", футбол).
увлекается("Толя", футбол).
увлекается("Таня", лыжи).
увлекается("Ваня", лыжи).
увлекается("Рома", кино).
увлекается("Толя", кино).
увлекается("Таня", кино).
увлекается("Ваня", кино).
увлекается("Миша", кино).
увлекается("Стас", кино).


хоббиУчеников():- forall((ученик(Имя, Класс), увлекается(Имя, Хобби)), (write("Имя: "),
                                                                        write(Имя),
                                                                        write(" | Класс: "),
                                                                        write(Класс),
                                                                        write(" | Хобби: "),
                                                                        write(Хобби),
                                                                        writeln(""))).

?- writeln("").
?- writeln("Список всех учеников и их увлечения: ").
?- хоббиУчеников().


/*
б) подбирает одному из учеников указанного класса, увлекающемуся кино, пару из других классов. Вывести все возможные пары. 
*/

подобратьПаруКино(Имя, ДругоеИмя):- увлекается(Имя, кино), увлекается(ДругоеИмя, кино),
                                    ученик(Имя, Класс), ученик(ДругоеИмя, ДругойКласс),
                                    Класс \= ДругойКласс, Имя \= ДругоеИмя.

всеВозможныеПары():- forall(подобратьПаруКино(Имя, ДругоеИмя), (write("Пара: "), write(Имя), write(" "), write(ДругоеИмя), writeln(""))).

?- writeln("").
?- writeln("Подобрать пару для кино: ").
?- forall(подобратьПаруКино("Миша", Пара), (write("Возможная пара: "), writeln(Пара))).

?- writeln("").
?- writeln("Все возможные пары: ").
?- всеВозможныеПары().

